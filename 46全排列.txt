func permute(nums []int) [][]int {
	var ans [][]int
	var path []int
	visited := make([]bool, len(nums))
	var backtrack func()
	backtrack = func() {
		if len(path) == len(nums) {
			temp := append([]int{}, path...)
			ans = append(ans, temp)
			return
		}
		for i := 0; i < len(nums); i++ {
			if !visited[i] {
				visited[i] = true
				path = append(path, nums[i])
				backtrack()
				visited[i] = false
				path = path[:len(path)-1]
			}
		}
	}
	backtrack()
	return ans
}