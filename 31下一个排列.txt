func nextPermutation(nums []int) {
	//1 3 5 7 9 8 6 4 2
	//              i j/k
	i, j, k := len(nums)-2, len(nums)-1, len(nums)-1
	//尽量操作右边的数，使得增加幅度比较小
	//从右向左找到第一个可以增长的位置
	//2,42,642,8642,98642怎么变都不可以增长了
	//798642的7与(右边比它大的)9或8交换可以增长
	//ij   k
	for i >= 0 && nums[i] >= nums[j] {
		i--
		j--
	}
	if i != -1 {
		//在尽可能靠右的低位(比i7大,尽量j9的更右边)进行交换
		//798642
		//ijk
		for nums[i] >= nums[k] {
			k--
		}
		//897642
		//ijk
		nums[i], nums[k] = nums[k], nums[i]
	}
	//i<j且j>=后边所有数,i要和j右边(也可能是j)第一个比i大的数交换
	//交换后,从j到结尾依然是非递增的
	//再让j到结尾逆序,变得尽量小
	//897642->824679
	for a, b := j, len(nums)-1; a < b; a, b = a+1, b-1 {
		nums[a], nums[b] = nums[b], nums[a]
	}
}