/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
func pathSum(root *TreeNode, targetSum int) [][]int {
	var ans [][]int
	var path []int
	var curSum int
	var backtrack func(cur *TreeNode)
	backtrack = func(cur *TreeNode) {
		if cur == nil {
			return
		}
		path = append(path, cur.Val)
		curSum += cur.Val
		defer func() {
			path = path[:len(path)-1]
			curSum -= cur.Val
		}()
		if cur.Left == nil && cur.Right == nil {
			if curSum == targetSum {
				temp := append([]int{}, path...)
				ans = append(ans, temp)
			}
			return
		}
		backtrack(cur.Left)
		backtrack(cur.Right)
	}
	backtrack(root)
	return ans
}