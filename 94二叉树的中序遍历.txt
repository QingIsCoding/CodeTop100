/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
/*
	func inorderTraversal(root *TreeNode) []int {
	    var ans []int
	    var inorder func(cur *TreeNode)
	    inorder = func(cur *TreeNode) {
	        if cur == nil {
	            return
	        }
	        inorder(cur.Left)
	        ans = append(ans, cur.Val)
	        inorder(cur.Right)
	    }
	    inorder(root)
	    return ans
	}
*/
func inorderTraversal(root *TreeNode) []int {
	var ans []int
	stack := make([]*TreeNode, 0)
	cur := root
	for cur != nil || len(stack) > 0 {
		if cur != nil {
			stack = append(stack, cur)
			cur = cur.Left
		} else {
			cur = stack[len(stack)-1]
			stack = stack[:len(stack)-1]
			ans = append(ans, cur.Val)
			cur = cur.Right
		}
	}
	return ans
}