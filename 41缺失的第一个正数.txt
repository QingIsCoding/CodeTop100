func firstMissingPositive(nums []int) int {
	//直接用该数组nums当哈希表用
	//在[1,length]内的数才影响结果,结果在[1,length+1]中
	//1.[-∞,0]中的数nums[i]变成length+1:小于等于0的数和结果无关，不需要特殊记录
	//但为了防止与下面2.中用负号来代表存在该数 防止歧义(length+1代替不影响结果就好)
	//2.[1,length]中的数nums[i]让数组 第i个位置的数 变成 第i个位置的数的相反数:代表有这个数，用负号标记
	//                         nums[abs(nums[i])-1]   -abs(nums[abs(nums[i])-1])
	//nums[i]<0:代表存在正数i+1
	//3.[length+1,+∞]中的数nums[i]和结果无关,不需要管
	length := len(nums)
	abs := func(a int) int {
		if a >= 0 {
			return a
		} else {
			return -a
		}
	}
	for i := range nums {
		if nums[i] <= 0 {
			nums[i] = length + 1
		}
	}
	for i := range nums {
		if abs(nums[i]) <= length {
			nums[abs(nums[i])-1] = -abs(nums[abs(nums[i])-1])
		}
	}
	for i := range nums {
		if nums[i] > 0 {
			return i + 1
		}
	}
	return length + 1
}