func wordBreak(s string, wordDict []string) bool {
	length := len(s)
	wordDictMap := make(map[string]bool)
	for _, word := range wordDict {
		wordDictMap[word] = true
	}
	//一般字符串的dp长度为length+1，让dp[0]代表空串""
	//dp[i]:字符串长度为i的话，dp[i]为true，表示s[0]~s[i-1]可以拆分
	dp := make([]bool, length+1)
	dp[0] = true
	for i := 1; i <= length; i++ {
		for j := 0; j < i; j++ {
			word := s[j:i]
			if dp[j] && wordDictMap[word] {
				dp[i] = true
			}
		}
	}
	return dp[length]
}