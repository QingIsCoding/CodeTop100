func maxSlidingWindow(nums []int, k int) []int {
	ans := make([]int, 0)
	//单调递减队列(越后入队越小,定义中可以存在相等元素)
	queue := make([]int, 0)
	push := func(value int) {
		for len(queue) > 0 && value > queue[len(queue)-1] {
			queue = queue[:len(queue)-1]
		}
		queue = append(queue, value)
	}
	pop := func(value int) {
		if value == queue[0] {
			queue = queue[1:]
		}
	}
	getMaxValue := func() int {
		return queue[0]
	}
	for i := 0; i < k; i++ {
		push(nums[i])
	}
	ans = append(ans, getMaxValue())
	for i := k; i < len(nums); i++ {
		push(nums[i])
		pop(nums[i-k])
		ans = append(ans, getMaxValue())
	}
	return ans
}