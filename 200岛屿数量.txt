func numIslands(grid [][]byte) int {
	var ans int
	directions := [][]int{{1, 0}, {-1, 0}, {0, 1}, {0, -1}}
	visited := make([][]bool, len(grid))
	for i := range visited {
		visited[i] = make([]bool, len(grid[0]))
	}
	var dfs func(x, y int)
	dfs = func(x, y int) {
		if x < 0 || x >= len(grid) || y < 0 || y >= len(grid[0]) {
			return
		}
		if grid[x][y] == '0' || visited[x][y] {
			return
		}
		visited[x][y] = true
		for i := range directions {
			nextx, nexty := x+directions[i][0], y+directions[i][1]
			dfs(nextx, nexty)
		}
	}
	for i := 0; i < len(grid); i++ {
		for j := 0; j < len(grid[0]); j++ {
			if grid[i][j] == '1' && !visited[i][j] {
				dfs(i, j)
				ans++
			}
		}
	}
	return ans
}